name: Docker CI


env:
  DOCKER_REACT_TEST: oldbonedocker/react-test
  DOCKER_MULTI_CLNT: oldbonedocker/multi-deploy:client
  DOCKER_MULTI_NGNX: oldbonedocker/multi-deploy:nginx
  DOCKER_MULTI_SRVS: oldbonedocker/multi-deploy:server
  DOCKER_MULTI_WRKS: oldbonedocker/multi-deploy:worker
  IMAGE_TAG: ${{ github.sha }}-${{ runner.os }}


on:
  push:
    branches:
      - production
      - feature/*
  pull_request:
     types: [opened, synchronize, reopened]
     branches:
      - production

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: >-
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      - run:
          docker build -t $DOCKER_REACT_TEST -f ./client/Dockerfile.dev ./client
      - run: docker run -e CI=true $DOCKER_REACT_TEST npm test
      - run: docker build -t $DOCKER_MULTI_CLNT ./client
      - run: docker build -t $DOCKER_MULTI_NGNX ./nginx
      - run: docker build -t $DOCKER_MULTI_SRVS ./server
      - run: docker build -t $DOCKER_MULTI_WRKS ./worker
      - run: >-
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker push $DOCKER_MULTI_CLNT
      - run: docker push $DOCKER_MULTI_NGNX
      - run: docker push $DOCKER_MULTI_SRVS
      - run: docker push $DOCKER_MULTI_WRKS

  sonarcloud:
    name: SonarCloud
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  trivy:
#    strategy:
#      matrix:
#        docker_images: [ "${{ env.DOCKER_REACT_TEST }}, ${{ env.DOCKER_MULTI_CLNT }},${{ env.DOCKER_MULTI_NGNX }}, ${{ env.DOCKER_MULTI_SRVS }},${{ env.DOCKER_MULTI_WRKS }}" ]
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout code
#    uses: actions/checkout@v3
#
#    - name: Scan with Trivy
#      uses: aquasecurity/trivy-action@0.9.0
#      with:
#        args: --severity CRITICAL --quiet $DOCKER_REACT_TEST $DOCKER_MULTI_CLNT $DOCKER_MULTI_NGNX $DOCKER_MULTI_SRVS $DOCKER_MULTI_WRKS
#        registry: ${{ secrets.DOCKER_REPOSITORY }}
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        auth_header: ${{ secrets.DOCKERHUB_TOKEN }}
  zap_scan:
    needs: [build]
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: ZAP Scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        docker_name: "owasp/zap2docker-stable"
        target: "https://www.zaproxy.org/"
        rules_file_name: ".zap/rules.tsv"
        cmd_options: "-a"
#  trivy:
#     needs: [ build ]
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#     uses: actions/checkout@v3
#
#     - name: Scan with Trivy
#     uses: aquasecurity/trivy-action@0.9.0
#     with:
#      args: --severity CRITICAL --quiet $DOCKER_REACT_TEST $DOCKER_MULTI_CLNT $DOCKER_MULTI_NGNX $DOCKER_MULTI_SRVS $DOCKER_MULTI_WRKS
#      registry: ${{ secrets.DOCKER_REPOSITORY }}
#      username: ${{ secrets.DOCKERHUB_USERNAME }}
#      auth_header: ${{ secrets.DOCKERHUB_TOKEN }}
